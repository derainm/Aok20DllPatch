#include <Windows.h>
#include "Hookbase.h"


#pragma region Chat color
//0042DB70   $ 8B5424 04      MOV EDX,DWORD PTR SS:[ESP+4]
DWORD JmbackAddressplayerPositions;
DWORD PTREDX;
DWORD PTREBX;
DWORD PTRESP;
DWORD PTREBP;
DWORD PTRESI;
DWORD PTREDI;
DWORD PTREAX;
DWORD PTRECX;
DWORD _782090;
void __declspec(naked)  playerPositions()
{
	__asm {
		MOV PTREDX, EDX
		MOV PTREBX, EBX
		MOV PTRESP, ESP
		MOV PTREBP, EBP
		MOV PTRESI, ESI
		MOV PTREDI, EDI
		MOV PTREAX, EAX
		MOV PTRECX, ECX
		MOV EAX, DWORD PTR DS : [ECX + 12C8h]
		MOV EBX, 0
		MOV ECX, EAX
		_007D073D :
		ADD ECX, 80h
		INC EBX
		CMP EDX, EBX
		JNZ  _007D073D
		MOVZX EDI, BYTE PTR DS : [ECX]
		CMP EDI, EDX
		JE _007D07AC

		_007D0765 :
		MOV ESP, 0
		_007D076A :
		MOVZX EDI, BYTE PTR DS : [ESP + ECX]
		MOV DWORD PTR DS : [ESP + _782090] , EDI
		INC ESP
		CMP EDI, 0
		JNZ SHORT _007D076A
		MOV EBP, _782090
		MOV DWORD PTR DS : [ECX] , EDX
		MOV ESP, 0

		_7D0797 :
		MOVZX EDI, BYTE PTR DS : [ESP + _782090]
		MOV DWORD PTR DS : [ESP + ECX + 1h] , EDI
		INC ESP
		CMP EDI, 0
		JNZ SHORT _7D0797


		_007D07AC :
		MOV EDX, PTREDX
		MOV EBX, PTREBX
		MOV ESP, PTRESP
		MOV EBP, PTREBP
		MOV ESI, PTRESI
		MOV EDI, PTREDI
		MOV EAX, PTREAX
		MOV ECX, PTRECX

		XOR EAX, EAX
		MOV AX, WORD PTR DS : [ECX + 12D8h]
		jmp[JmbackAddressplayerPositions]
	}
	//cout << PTREDX;
};

DWORD JmbackAddressplayerChatColor;
DWORD PPC_PTREAX;
DWORD PPC_PTRECX;
DWORD PPC_PTREDX;
DWORD PPC_PTREBX;
DWORD PPC_PTRESP;
DWORD PPC_PTREBP;
DWORD PPC_PTRESI;
DWORD PPC_PTREDI;
DWORD _004DCA40;
void __declspec(naked)  playerChatColor()
{
	__asm {
		MOV PPC_PTREAX, EAX
		MOV PPC_PTRECX, ECX
		MOV PPC_PTREDX, EDX
		MOV PPC_PTREBX, EBX
		MOV PPC_PTRESP, ESP
		MOV PPC_PTREBP, EBP
		MOV PPC_PTRESI, ESI
		MOV PPC_PTREDI, EDI
		MOVZX EAX, BYTE PTR DS : [ECX]
		MOV EDX, DWORD PTR DS : [6645C4h]
		MOV ECX, DWORD PTR DS : [EDX + 41Ch]
		MOV EDX, DWORD PTR DS : [ECX + 4Ch]
		CMP EAX, 0x1
		JE SHORT _007D03B9
		CMP EAX, 0x2
		JE SHORT _007D03B9
		CMP EAX, 0x3
		JE SHORT _007D03B9
		CMP EAX, 0x4
		JE SHORT _007D03B9
		CMP EAX, 0x5
		JE SHORT _007D03B9
		CMP EAX, 0x6
		JE SHORT _007D03B9
		CMP EAX, 0x7
		JE SHORT _007D03B9
		CMP EAX, 0x8
		JE SHORT _007D03B9
		JMP _007D0404

		_007D03B9 :
		MOV EAX, DWORD PTR DS : [EDX + EAX * 4]
		MOV ECX, DWORD PTR DS : [EAX + 158h]
		MOV EAX, DWORD PTR DS : [ECX + 10h]
		MOV ECX, PPC_PTRECX
		MOV EDX, PPC_PTREDX
		MOV EBX, PPC_PTREBX
		MOV ESP, PPC_PTRESP
		MOV EBP, PPC_PTREBP
		MOV ESI, PPC_PTRESI
		MOV EDI, PPC_PTREDI
		CMP EAX, 0F2h
		JE SHORT _007D044A
		_007D03F6 :
		PUSH EAX
		MOV EAX, PPC_PTREAX
		JMP[_004DCA40]

		_007D0404 :
		MOV ECX, PPC_PTRECX
		MOV EDX, PPC_PTREDX
		MOV EBX, PPC_PTREBX
		MOV ESP, PPC_PTRESP
		MOV EBP, PPC_PTREBP
		MOV ESI, PPC_PTRESI
		MOV EDI, PPC_PTREDI
		PUSH 0FFh
		MOV EAX, PPC_PTREAX
		JMP[_004DCA40]

		_007D044A:
		MOV EAX, 15h
		jmp[_007D03F6]


	}
}


DWORD _4DCA_PTREAX;
DWORD _4DCA_PTRECX;
DWORD _004DCA46;
void __declspec(naked)  playerChatColor004DCA40()
{
	__asm {

		MOV _4DCA_PTRECX, ECX
		MOV _4DCA_PTREAX, EAX
		MOVZX EAX, BYTE PTR DS : [ECX]
		CMP EAX, 1h
		JE SHORT _007D0542
		CMP EAX, 2h
		JE SHORT _007D0542
		CMP EAX, 3h
		JE SHORT _007D0542
		CMP EAX, 4h
		JE SHORT _007D0542
		CMP EAX, 5h
		JE SHORT _007D0542
		CMP EAX, 6h
		JE SHORT _007D0542
		CMP EAX, 7h
		JE SHORT _007D0542
		// 8??  i add
		CMP EAX, 8h
		JE SHORT _007D0542
		MOV ECX, _4DCA_PTRECX
		MOV EAX, _4DCA_PTREAX

		PUSH ECX
		MOV ECX, DWORD PTR SS : [EBP]
		PUSH 3h
		JMP[_004DCA46]
		_007D0542 :
		MOV BYTE PTR DS : [ECX] , 20h
		MOV ECX, _4DCA_PTRECX
		MOV EAX, _4DCA_PTREAX
		NOP
		PUSH ECX
		MOV ECX, DWORD PTR SS : [EBP]
		PUSH 3h
		JMP[_004DCA46]
	}
}

DWORD _004DCAC5_PTREAX;
DWORD _004DCAC5_PTRECX;
DWORD _004DCAC5_PTREDX;
DWORD _004DCAC5_PTREBX;
DWORD _004DCAC5_PTRESP;
DWORD _004DCAC5_PTREBP;
DWORD _004DCAC5_PTRESI;
DWORD _004DCAC5_PTREDI;
DWORD _004DCACA;
//004DCAC5   .-E9 54372F00    JMP Empires2.007D021E

void __declspec(naked)  playerChatColor004DCAC5()
{
	__asm {

		MOV _004DCAC5_PTREAX, EAX
		MOV _004DCAC5_PTRECX, ECX
		MOV _004DCAC5_PTREDX, EDX
		MOV _004DCAC5_PTREBX, EBX
		MOV _004DCAC5_PTRESP, ESP
		MOV _004DCAC5_PTREBP, EBP
		MOV _004DCAC5_PTRESI, ESI
		MOV _004DCAC5_PTREDI, EDI
		MOVZX EAX, BYTE PTR DS : [ECX]
		MOV EDX, DWORD PTR DS : [6645C4h]
		MOV ECX, DWORD PTR DS : [EDX + 0x41C]
		MOV EDX, DWORD PTR DS : [ECX + 0x4C]
		CMP EAX, 1h
		JE  _007D0293
		CMP EAX, 2h
		JE  _007D0293
		CMP EAX, 3h
		JE  _007D0293
		CMP EAX, 4h
		JE  _007D0293
		CMP EAX, 5h
		JE  _007D0293
		CMP EAX, 6h
		JE  _007D0293
		CMP EAX, 7h
		JE  _007D0293
		CMP EAX, 8h
		JE  _007D0293
		JMP _007D02DE

		_007D0293 :
		MOV EAX, DWORD PTR DS : [EDX + EAX * 4]
			MOV ECX, DWORD PTR DS : [EAX + 158h]
			MOV EAX, DWORD PTR DS : [ECX + 10h]
			MOV ECX, _004DCAC5_PTRECX
			MOV EDX, _004DCAC5_PTREDX
			MOV EBX, _004DCAC5_PTREBX
			MOV ESP, _004DCAC5_PTRESP
			MOV EBP, _004DCAC5_PTREBP
			MOV ESI, _004DCAC5_PTRESI
			MOV EDI, _004DCAC5_PTREDI
			CMP EAX, 0F2h
			JE _007D031C
			_007D02D0 :
		PUSH EAX
			MOV EAX, _004DCAC5_PTREAX
			JMP[_004DCACA]

			_007D02DE :
			MOV ECX, _004DCAC5_PTRECX
			MOV EDX, _004DCAC5_PTREDX
			MOV EBX, _004DCAC5_PTREBX
			MOV ESP, _004DCAC5_PTRESP
			MOV EBP, _004DCAC5_PTREBP
			MOV ESI, _004DCAC5_PTRESI
			MOV EDI, _004DCAC5_PTREDI
			PUSH 0FFh
			MOV EAX, _004DCAC5_PTREAX
			JMP[_004DCACA]

			_007D031C:
		MOV EAX, 15h
			JMP[_007D02D0]
	}
}

//004DCAC5   .-E9 54372F00    JMP Empires2.007D021E

//004DCACA   . - E9 91392F00    JMP Empires2.007D0460
DWORD _004DCACA_PTRECX;
DWORD _004DCACA_PTREAX;
DWORD _004DCAD2;
void __declspec(naked)  playerChatColor004DCACA()
{
	__asm {

		MOV _004DCACA_PTRECX, ECX
		MOV _004DCACA_PTREAX, EAX
		MOVZX EAX, BYTE PTR DS : [ECX]
		CMP EAX, 1h
		JE  _007D04B2
		CMP EAX, 2
		JE  _007D04B2
		CMP EAX, 3h
		JE  _007D04B2
		CMP EAX, 4h
		JE  _007D04B2
		CMP EAX, 5h
		JE  _007D04B2
		CMP EAX, 6h
		JE  _007D04B2
		CMP EAX, 7h
		JE  _007D04B2
		CMP EAX, 8h
		JE  _007D04B2
		MOV ECX, _004DCACA_PTRECX
		MOV EAX, _004DCACA_PTREAX
		PUSH ECX
		MOV ECX, DWORD PTR DS : [EBX + EDX * 4 + 1178h]
		JMP[_004DCAD2]
		_007D04B2 :
		MOV BYTE PTR DS : [ECX] , 20h
		MOV ECX, _004DCACA_PTRECX
		MOV EAX, _004DCACA_PTREAX
		PUSH ECX
		MOV ECX, DWORD PTR DS : [EBX + EDX * 4 + 1178h]
		NOP
		JMP[_004DCAD2]
	}
}


DWORD _00E0857_PTREAX;
DWORD _004E085E;
void __declspec(naked)  playerPositionsr00E0857()
{
	__asm {

		MOV _00E0857_PTREAX, EAX
		MOVZX EAX, BYTE PTR DS : [EAX]
		CMP EAX, 1h
		JE  _007D0834
		CMP EAX, 2h
		JE  _007D0834
		CMP EAX, 3h
		JE  _007D0834
		CMP EAX, 4h
		JE  _007D0834
		CMP EAX, 5h
		JE  _007D0834
		CMP EAX, 6h
		JE  _007D0834
		CMP EAX, 7h
		JE  _007D0834
		CMP EAX, 8h
		JE  _007D0834

		MOV EAX, _00E0857_PTREAX
		LEA ECX, DWORD PTR SS : [ESP + 15Ch]
		JMP[_004E085E]
		_007D0834 :
		MOV EAX, _00E0857_PTREAX
		LEA ECX, DWORD PTR SS : [ESP + 15Bh]
		JMP[_004E085E]

	}
}

#pragma endregion Chat color


void  chatColor()
{
	DWORD hockAdress = 0x042DB74;
	//int hookLength = 9;
	JmbackAddressplayerPositions = 0x42DB7D;// hockAdress + hookLength;
	//0x2BF700
	setHook((void*)0x042DB74, playerPositions);

	//0x2BF343
	_004DCA40 = 0x04DCA40;
	setHook((void*)0x4DCA3B, playerChatColor);
	_004DCA46 = 0x04DCA46;
	//004DCA40   .-E9 943A2F00    JMP Empires2.007D04D9
	setHook((void*)0x04DCA40, playerChatColor004DCA40);
	//0x4DCA3B
	_004DCACA = 0x04DCACA;
	setHook((void*)0x4DCAC5, playerChatColor004DCAC5);
	//004DCA40   .-E9 943A2F00    JMP Empires2.007D04D9
	_004DCAD2 = 0x04DCAD2;
	setHook((void*)0x04DCACA, playerChatColor004DCACA);
	//004E0857   .-E9 94FF2E00    JMP Empires2.007D07F0
	_004E085E = 0x04E085E;
	setHook((void*)0x4E0857, playerPositionsr00E0857);
}
//players structs MOV ECX,DWORD PTR DS:[6645C4]
//0041F840  /$ 8B81 1C040000           MOV EAX,DWORD PTR DS:[ECX+41C]
//004DC860 / $ 81EC 08010000             SUB ESP, 108
//fuction called when user or game user console
DWORD _004DCA13 = 0x04DCA13;

DWORD c_EAX;
DWORD c_ECX;
DWORD c_EDX;
DWORD c_EBX;
DWORD c_ESP;
DWORD c_EBP;
DWORD c_ESI;
DWORD c_EDI;

DWORD _0041F840 = 0x041F840;
//004DCA0D  |. 8D5424 18      |LEA EDX,DWORD PTR SS:[ESP+18]


void __declspec(naked)  chatColor004DC860()
{
	__asm {
		LEA EDX, DWORD PTR SS : [ESP + 18h]
		REPNE SCAS BYTE PTR ES : [EDI]
		//save register
		MOV c_EAX, EAX
		MOV c_ECX, ECX
		MOV c_EDX, EDX
		MOV c_EBX, EBX
		MOV c_ESP, ESP
		MOV c_EBP, EBP
		MOV c_ESI, ESI
		MOV c_EDI, EDI


		MOV EDX, DWORD PTR DS : [6645C4h]
		MOV ECX, DWORD PTR DS : [EDX + 41Ch]
		MOV EDX, DWORD PTR DS : [ECX + 4Ch]


		//pointer of players struct
		MOV ECX, DWORD PTR DS : [6645C4h]
		call _0041F840

		//restaure register
		MOV  EAX, c_EAX
		MOV  ECX, c_ECX
		MOV  EDX, c_EDX
		MOV  EBX, c_EBX
		MOV  ESP, c_ESP
		MOV  EBP, c_EBP
		MOV  ESI, c_ESI
		MOV  EDI, c_EDI
		JMP _004DCA13 


	}
}




void chatchatColorFixe()
{
	setHook((void*)0x04DCA0D,chatColor004DC860);
}