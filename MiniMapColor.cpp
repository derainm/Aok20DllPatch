#include <Windows.h>
#include "Hookbase.h"


#pragma region Mini map color
//0058D0F0   .-E9 2E302400    JMP Empires2.007D0123
DWORD _0058D0F7;
void __declspec(naked)  MiniMapColor58D0F0()
{
	__asm {

		MOV CL, BYTE PTR SS : [EBP + 1Ch]
		MOV BYTE PTR DS : [EDI + 30h] , CL
		MOV ECX, DWORD PTR SS : [ESP + 10h]
		MOV EDX, DWORD PTR DS : [ECX + 4h]
		JMP[_0058D0F7]
	}
}


//005C3F12   . 84C0           TEST AL,AL
//005C3F14   .-0F84 29C22000  JE Empires2.007D0143
DWORD _005C3F26;
void __declspec(naked)  MiniMapColor5C3F12()
{
	__asm {
		MOVSX ECX, BYTE PTR DS : [EDI + 30h]
		MOV EAX, DWORD PTR DS : [ESI + 0F8h]
		MOV EAX, DWORD PTR DS : [EAX + 4Ch]
		MOV ECX, DWORD PTR DS : [EAX + ECX * 4h]
		MOV EDX, DWORD PTR DS : [ECX + 158h]
		MOV EAX, DWORD PTR DS : [EDX + 10h]
		JMP[_005C3F26]
	}
}
//00461222   >-E9 DCED3600    JMP Empires2.007D0003

DWORD _00461227;
void __declspec(naked)  MiniMapColor461222()
{
	__asm {
		DEC EBP
		DEC EDI
		MOV EAX, DWORD PTR DS : [ECX + 8h]
		TEST EAX, EAX
		JMP[_00461227]
	}
}
//0046123C   >-E9 D2ED3600    JMP Empires2.007D0013
DWORD _00461241;
void __declspec(naked)  MiniMapColor46123C()
{
	__asm {
		MOV EDX, DWORD PTR DS : [ECX + 30h]
		SUB EDX, 2h
		CMP EDI, EDX
		JMP[_00461241]
	}
}
//00461249   .-E9 D5ED3600    JMP Empires2.007D0023
DWORD _46124E;
void __declspec(naked)  MiniMapColor461249()
{
	__asm {
		MOV EAX, DWORD PTR DS : [ECX + 30h]
		SUB EAX, 2h
		CMP EBP, EAX
		JMP[_46124E]
	}
}

BYTE c_4612E0[] =
{
	0xC7,0x44,0x24,0x20,0x00,0x00,0x00,0x00,0xDA,0x74,0x24,0x14,0xD9,0x5C,0x24,0x18,0xD9,0x44,0x24,0x18,0xD8,0x05,0x88,0xC5,0x61,0x00,0xE8,0x15,0xB7,0x19,0x00,0xB9
	,0x00,0x00,0x00,0x00,0x90,0x83,0xC1,0x03,0x89,0x4C,0x24,0x1C,0x66,0x66,0x90,0x3B,0xFD,0x7E,0x0A,0xD9,0x44,0x24,0x18,0xD9,0xE0,0xD9,0x5C,0x24,0x18,0x8B,0x6C,0x24
	,0x14,0x85,0xED,0x7E,0x35,0x8B,0x7C,0x24,0x24,0x81,0xE7,0xFF,0x00,0x00,0x00,0x8B,0x4C,0x24,0x1C,0xD9,0x44,0x24,0x20,0x51,0x57,0xE8,0xD6,0xB6,0x19,0x00,0x03,0xC6
	,0x50,0xE8,0x5A,0xD0,0x19,0x00,0xD9,0x44,0x24,0x2C,0xD8,0x44,0x24,0x24,0x83,0xC4,0x0C,0x03,0xF3,0x4D,0xD9,0x5C,0x24,0x20,0x75,0xD5,0x5F,0x5E,0x5D,0x5B,0xC2,0x14
	,0x00,0x20,0x75,0xD1,0x5F,0x5E,0x5D,0x5B,0xC2,0x14,0x00
};
BYTE c_5C3F29[] =
{
0x6A, 0x06
};

//005C5244 | > 8B0D C4456600  MOV ECX, DWORD PTR DS : [0x6645C4]

BYTE c_5C5244[] =
{
 0x8B,0x0D,0xD4,0x33,0x66,0x00
};
BYTE c_5C3839[] =
{
0x8D,0x8E,0x7C,0x01,0x00,0x00,0x89,0x41,0xFC,0x31,0xC0,0x38,0x01,0x0F,0x94,0x01,0x74,0x07,0x38,0x41,0x01,0x0F,0x94,0x41,0x01
};
//005C3F3D   . E8 BEA02000    CALL Empires2.007CE000
DWORD _5FCA14;
DWORD _4611D0;
void __declspec(naked)  MiniMapColor7CE000()
{
	__asm {
		PUSH EBX
		PUSH EBP
		PUSH ESI
		MOV ESI, ECX
		MOV ECX, DWORD PTR SS : [ESP + 10h]
		PUSH EDI
		MOVSX EAX, WORD PTR DS : [ESI + 134h]
		MOVSX EDX, CX
		SUB EAX, EDX
		MOV EDX, DWORD PTR SS : [ESP + 18h]
		MOVSX EDI, DX
		ADD EAX, EDI
		MOV EDI, DWORD PTR DS : [ESI + 130h]
		CMP CX, DX
		LEA EAX, DWORD PTR DS : [EAX + EAX * 8h]
		LEA EDI, DWORD PTR DS : [EDI + EAX * 4h - 24h]
		JL _007CE033
		MOV ECX, EDX
		_007CE033 :
		FLD DWORD PTR DS : [EDI + 20h]
		FCOMP DWORD PTR DS : [61C598h]
		FSTSW AX
		TEST AH, 1h
		JE _007CE053
		MOVSX ECX, CX
		MOV DWORD PTR SS : [ESP + 14h] , ECX
		FILD DWORD PTR SS : [ESP + 14h]
		FMUL DWORD PTR DS : [EDI + 20h]
		JMP _007CE061
		_007CE053 :
		MOVSX EDX, CX
		MOV DWORD PTR SS : [ESP + 14h] , EDX
		FILD DWORD PTR SS : [ESP + 14h]
		FMUL DWORD PTR DS : [EDI + 18h]
		_007CE061 :
		CALL  _5FCA14
		MOV DX, WORD PTR DS : [EDI]
		MOV EDI, DWORD PTR DS : [ESI + 12Ch]
		MOVSX ECX, DX
		PUSH 0h
		LEA ECX, DWORD PTR DS : [ECX + ECX * 2h]
		MOV CX, WORD PTR DS : [EDI + ECX * 2h + 2h]
		ADD CX, WORD PTR DS : [ESI + 0Ch]
		ADD ECX, EAX
		MOV AX, WORD PTR DS : [ESI + 138h]
		ADD AX, WORD PTR DS : [ESI + 10h]
		MOV EDI, ECX
		ADD EAX, EDX
		MOV EDX, DWORD PTR SS : [ESP + 24h]
		MOV EBX, EAX
		SUB EDI, EDX
		SUB EBX, EDX
		LEA EBP, DWORD PTR DS : [ECX + EDX]
		ADD EAX, EDX
		MOVSX EDX, BX
		MOV DWORD PTR SS : [ESP + 1Ch] , EAX
		MOV DWORD PTR SS : [ESP + 18h] , EDX
		MOVSX EAX, AX
		MOVSX ECX, BP
		MOVSX EDX, DI
		PUSH EAX
		MOV EAX, DWORD PTR SS : [ESP + 1Ch]
		INC ECX
		MOV DWORD PTR SS : [ESP + 28h] , EDX
		PUSH ECX
		MOV ECX, DWORD PTR DS : [ESI + 20h]
		INC EDX
		PUSH EAX
		PUSH EDX
		CALL _4611D0
		MOVSX EAX, WORD PTR SS : [ESP + 18h]
		MOV ECX, DWORD PTR SS : [ESP + 1Ch]
		MOV EDX, DWORD PTR SS : [ESP + 14h]
		PUSH ECX
		PUSH EAX
		MOV ECX, DWORD PTR DS : [ESI + 20h]
		MOVSX EAX, BP
		PUSH EAX
		MOV EAX, DWORD PTR SS : [ESP + 2Ch]
		PUSH EDX
		PUSH EAX
		CALL _4611D0
		MOVSX EAX, WORD PTR SS : [ESP + 18h]
		MOVSX EDI, DI
		MOVSX EBP, BP
		MOVSX EBX, BX
		PUSH 0h
		LEA ECX, DWORD PTR DS : [EDI + 1h]
		PUSH EAX
		PUSH ECX
		MOV ECX, DWORD PTR DS : [ESI + 20h]
		LEA EDX, DWORD PTR SS : [EBP + 1h]
		PUSH EBX
		PUSH EDX
		MOV DWORD PTR SS : [ESP + 28h] , EAX
		CALL _4611D0
		MOV EAX, DWORD PTR SS : [ESP + 1Ch]
		MOV ECX, DWORD PTR SS : [ESP + 14h]
		PUSH EAX
		PUSH ECX
		MOV ECX, DWORD PTR DS : [ESI + 20h]
		PUSH EDI
		PUSH EBX
		PUSH EBP
		CALL _4611D0
		POP EDI
		POP ESI
		POP EBP
		POP EBX
		RETN 10h
	}
}
//005C3F3D   . E8 BEA02000    CALL Empires2.007CE000
//005C3F42   > 83C5 04        ADD EBP,0x4
DWORD _5C3F42;
void __declspec(naked)  MiniMapColor5C3F3D()
{
	__asm {
		CALL MiniMapColor7CE000
		JMP[_5C3F42]
	}
}
//005C3F12   . 84C0               TEST AL, AL
BYTE c_005C3F12[] =
{
0x84,0xC0
};
//005C3F1A 
BYTE c_005C3F1A[] =
{
0xC1,0xE8,0x08,0x84,0xC0,0x74,0x05,0xA0,0x0A,0xDD,0x66,0x00,0xD9,0x47,0x3C,0x6A,0x06
};
BYTE NOPE[]
{
	0x66,0x90
};
#pragma endregion

void miniMapColor()
{
	////0058D0F0   .-E9 2E302400    JMP Empires2.007D0123
	_0058D0F7 = 0x058D0F7;
	setHook((void*)0x0058D0F0, MiniMapColor58D0F0);
	//0058D0F5  
	writeData(0x058D0F5, NOPE, 2);
	//005C3F12  
	_005C3F26 = 0x05C3F26;
	//setHook((void*)0x05C3F12, MiniMapColor5C3F12);
	writeData(0x05C3F12, c_005C3F12, 2);
	setHookJE((void*)0x05C3F14, MiniMapColor5C3F12);
	writeData(0x05C3F1A, c_005C3F1A, 17);
	//00461222
	_00461227 = 0x0461227;
	setHook((void*)0x0461222, MiniMapColor461222);
	//0046123C 
	_00461241 = 0x0461241;
	setHook((void*)0x046123C, MiniMapColor46123C);
	//0x461249
	_46124E = 0x046124E;
	setHook((void*)0x461249, MiniMapColor461249);
	//0x4612E0
	writeData(0x4612E0, c_4612E0, 139);
	//005C3F29   . 6A 04          PUSH 0x4
	writeData(0x05C3F29, c_5C3F29, 2);
	//0x5C5221
	//005C5233  |> 8B0D C4456600  MOV ECX,DWORD PTR DS:[0x6645C4]
	writeData(0x05C5233, c_5C5244, 6);
	//0x5C3839
	//writeData(0x5C3839, c_5C3839, 25);
	//005C3F3D   . E8 BEA02000    CALL Empires2.007CE000

	_5FCA14 = 0x05FCA14;
	_4611D0 = 0x04611D0;
	_5C3F42 = 0x5C3F42;
	//setHook((void*)0x05C3F3D, MiniMapColor5C3F3D);
	setHookCall((void*)0x05C3F3D, MiniMapColor7CE000);
}