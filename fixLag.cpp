#include <windows.h>
#include "Hookbase.h"


//0043C7F1  |. E8 2ADC1A00    CALL empires2.005EA420
DWORD _005EA420 = 0x05EA420;
DWORD _0043C8B1 = 0x043C8B1;
DWORD _0043C7F6 = 0x043C7F6;
void __declspec(naked)  FixActionLagCrashBug1()
{
	__asm {
		CALL _005EA420
		TEST EAX, EAX
		JE __0043C8B1 
		JMP _0043C7F6 

		__0043C8B1:
		JMP _0043C8B1
	}
}
//0043C8D1  |. E8 4ADB1A00    CALL empires2.005EA420
DWORD _0043C99C = 0x043C99C;
DWORD _0043C8D6 = 0x043C8D6;
void __declspec(naked)  FixActionLagCrashBug2()
{
	__asm {
		CALL _005EA420
		TEST EAX, EAX
		JE __0043C99C
		JMP _0043C8D6

		__0043C99C :
		JMP _0043C99C
	}
}
//// Fix multiplayer network bugs
//Injection(0x5d476b, "38");
//Injection(0x5ccc1d, "24FA");
//Injection(0x5ccc34, "D007");
//Injection(0x5a69b0, "8B566C");
//Injection(0x5a69f5, "3B466C");
//Injection(0x5a6e8e, "EB");
//Injection(0x5a6edf, "E98A01000090");
//Injection(0x5a6dcb, "6690");
//Injection(0x5ca7a3, "7C");
//Injection(0x5a6ab8, "EB4A66666690");
//Injection(0x5a67eb, "09");
//Injection(0x5a6800, "535633DB578D73018B0DA012790056E8CC5004008BF885FF7E4D8B0D0012790056E82A2E030083F802743BA1A01279008B80240400008B484C8B0CB9E85FD6FAFF85C075228B15A01279008A84329D10000084C075118B0D0012790056E89EE2020085C07501434683FE097C9B5F8BC35E5BC390");
//Injection(0x5d7010, "31C0C3666690");
//Injection(0x5d7030, "C2040090");
//Injection(0x5d73d0, "C36690");
//Injection(0x5d7350, "C20800666690");
//Injection(0x5d7290, "C2080090");
//Injection(0x5d1a1f, "68040002008974243C8985EC150000E87D1D040083C4048944244439D8C744243802000000742668F01F5D0068D01F5D008D780468002000006A1057C70000200000E8EB4B04008BC76666669068040018008974243C8985DC1D0000E8301D040083C4048944244439D8C74424380300000074266840205D006820205D008D780468000001006A1857C70000000100E89E4B04008BC766666690");
//Injection(0x5d6f20, "535556578BF931ED31DB8BB7E01D000001DE8B0639E8740950E880C8030083C40483C318892E81FBE8FF1700896E04896E08896E0C896E10896E1476CD31DB8BB7DC1D000001DE8B0639E8740950E84BC8030083C40483C310892E81FBF0FF0100896E04896E08896E0C76D35F5E5D5BC390");
//Injection(0x5d6fb0, "535556578B44241431ED48C1E0108D04408B99E01D000031FF01C38D343B8B0639E8740950E8E4C7030083C404892E896E04896E08896E0C896E10896E1483C71881FF0000030072D25F5E5D5BC20400666690");
//Injection(0x5d7080, "568B81E41000005785C075055F5EC218008B4424208BF948C1E0108B97E01D00008D0C408B44240C01CA8BF025FF1F000053C1E0038D1C408B44241C01D38B54242089430C8B4424188953108BC889730489430885C0743F8B531439D07E248B0B5021C9740951E8D2C6030083C404E8BCC6030083C4048B4B08890385C07417894B148B3B8B7424148BD1C1E902F3A58BCA83E103F3A45B5F5EC21800");

//Injection(0x5d7180, "56578B81E41000008BF985C075055F5EC210008B44240C538BF025FF1F00008B9FDC1D0000C1E00401C38B4424188973048BC889430885C0743F8B530C39D07E248B0B5021C9740951E8F0C5030083C404E8DAC5030083C4048B4B08890385C07417894B0C8B3B8B7424148BD1C1E902F3A58BCA83E103F3A45B5F5EC2100090");
//Injection(0x5d7880, "5355568B5C24145731FF8BF139BC99481E00007408393D940F790075075F5E5D5BC20800FF15D85363008B5424148B8C9E3814000083FA647C7E8D7A0239CA7F108BAC9EB41400008BC829E983F964726789BC9E3814000089849EB41400004ABD02000000428BFA81E2FF1F00008B86DC1D0000C1E20401D039780475418B0D940F79008BF88B50088B07528B949E481E0000506A0052518BCEE821BCFFFF8B570801961C47000085C075060196C41200008B57044D7FAD5F5E5D5BC208004F89BC9E381400005F5E5D5BC20800");
//Injection(0x5d20f6, "EB5566666690");
//Injection(0x5d2165, "10");
//Injection(0x5d1fd0, "8BC131C9890889480489480889480CC36690");
//Injection(0x5d1ff0, "568BF18B0185C0740B50E8BF17040031C083C40489460889460489460C89065EC3");
//Injection(0x5d6ce0, "83EC085355568B81E41000005785C07410BB010000008BF1663999DC12000073085F5E5D5B83C408C3538BCEE8CF29000085C0745E3B9EE010000074568D43FF8B8EE01D0000C1E0108D04408B949EE41D000001C18D4201894C24148BE825FF1F00008B542414C1E0038D044001D0396804751F8BF88B50108B470C8B4F086A01528B175052518BCEE8C2C8FFFF458BC5EBCB4366399EDC120000738C5F5E5D5B83C408C36690");
//Injection(0x5d74c0, "83EC105355568BF18B81E41000005785C07412BB010000008D7C241866399EDC12000073085F5E5D5B83C410C3C70758000000FF15D853630089442410538BCEE8DB21000085C074613B9EE010000074598B949EE41D00008B8C9EE81300008D6A018B44241039CD75108BC88B949E1014000029D183F964723089AC9EE81300008B0D940F790089849E1014000021C97422896F046A088B849E481E0000576A0050518BCEE8D6BFFFFF4366399EDC12000073895F5E5D5B83C410C3");
//Injection(0x5d2063, "897E145F5EC3");
//Injection(0x5d4359, "766C8B8D341300008B9424C40300008B8424C003000041898D341300008B8C24B803000056528B5308505153528BCDE8F32C00005F5E5DB8010000005B81C4A4030000C214000F1F840000000000660F1F8400000000000F1F8400000000008B8C24C803000085C90F84C9290000");
//Injection(0x5d6d90, "8D50018D46FF8B8DE01D0000C1E0108D044001C18BC225FF1F0000C1E0038D044001C83950040F850BD6FFFF8D56FFC7049580527A0000000000E9F8D5FFFF6690");
//Injection(0x5d7e74, "01");
//Injection(0x5d7f5b, "00");
//Injection(0x5da8d8, "C0");
//Injection(0x5da8e2, "C0");
//Injection(0x5d077e, "C0");
//Injection(0x5d3bb4, "EB1190");
//Injection(0x5d42a5, "7D383C5874383C4375138A531C20D27529660F1F440000660F1F440000");
//Injection(0x5d433e, "5F5E5DB8010000005B81C4A4030000C21400");
//Injection(0x5d43e9, "8B85AC12000085C075398B8424C40300008B8C24C00300008B15A80F790050A1A40F790051668B4B01528A13508B4304518B8C24CC030000525056518BCDE8B40000005F5E5DB8010000005B81C4A4030000C2140066666690");
//Injection(0x5d7f67, "E947FFFFFF");
//Injection(0x5d7f2b, "EB86666690");
//Injection(0x5d7ea4, "E9C50000000F1F4400000F1F4400008D542424");
//Injection(0x5d7f6e, "8B8D3C13000041807C24383E898D3C130000752A8B4C24188B85E01000006AFF6A00668B51018B4C244852");
void __declspec(naked)  FixMultiplayerNetworkBugs()
{
	__asm {
		CALL _005EA420
		TEST EAX, EAX
		JE __0043C99C
		JMP _0043C8D6

		__0043C99C :
		JMP _0043C99C
	}
}
void FixLagHook()
{
	// Fix action lag crash bug
	setHook((void*)0x043C7F1, FixActionLagCrashBug1);
	setHook((void*)0x043C8D1, FixActionLagCrashBug2);
	/*// Fix multiplayer network bugs
	//0x428738  |. 8B4C24 20      MOV ECX,DWORD PTR SS:[ESP+38]
	BYTE _00428738[] = {0x8B,0x4C,0x24,0x38};
	writeData(0x0428738, _00428738, 4);
	//0043801B     81E6 24FAFFFF  AND ESI,FFFFFA24
	BYTE _0043801B[] = {0x81,0xE6,0x24,0xFA,0xFF,0xFF};
	writeData(0x043801B, _0043801B, 6);
	//00438032     81C6 D0070000  ADD ESI,7D0
	BYTE _00438032[] = {0x81,0xC6,0xD0,0x07,0x00,0x00};
	writeData(0x0438032, _00438032, 6);
	//0045C010     8B56 6C        MOV EDX,DWORD PTR DS:[ESI+6C]
	BYTE _0045C010[] = {0x8B,0x56,0x6C};
	writeData(0x045C010, _0045C010,3);
	//0045C055     3B46 6C        CMP EAX,DWORD PTR DS:[ESI+6C]
	BYTE _0045C055[] = {0x3B,0x46,0x6C};
	writeData(0x045C055, _0045C055, 3);
	//0045C4EE     EB 32          JMP SHORT empires2.0045C522
	writeByte(0x045C4EE, 0xEB);
	//0045C53F  |> 8DA9 E8080000  LEA EBP,DWORD PTR DS:[ECX+8E8]   -> jmp 0045C6CE  |> 5F             POP EDI
	BYTE _0045C53F[] = {0xE9,0x8A,0x01,0x00,0x00,0x90};
	writeData(0x045C53F, _0045C53F,6);
	//0045C42B     66:90          NOP
	BYTE _0045C42B[] = {0x66,0x90};
	writeData(0x045C42B, _0045C42B, 2);
	//0043A1B3    ^7C E9          JL SHORT empires2.0043A19E
	writeByte(0x043A1B3, 0x7C);
	//0045C118     EB 4A          JMP SHORT empires2.0045C164
	BYTE _0045C118[] = {0xEB,0x4A,0x66,0x66,0x66,0x90};
	writeData(0x045C118, _0045C118, 6);
	//0045BE49     83FE 09        CMP ESI,9
	BYTE _0045BE49[] = {0x83,0xFE,0x09};
	writeData(0x045BE49, _0045BE49, 3);
	//0045BE60
	BYTE _0045BE60[] = {0x53,0x56,0x33,0xDB,0x57,0x8D,0x73,0x01,0x8B,0x0D,0xC4,0x45,0x66,0x00,0x56,0xE8,0x9C,0x63,0xFC,0xFF,0x8B,0xF8,0x85,0xFF,0x7E,0x4D,0x8B,0x0D,0x20,0x45,0x66,0x00
	,0x56,0xE8,0xFA,0x16,0xFD,0xFF,0x83,0xF8,0x02,0x74,0x3B,0xA1,0xC4,0x45,0x66,0x00,0x8B,0x80,0x1C,0x04,0x00,0x00,0x8B,0x48,0x4C,0x8B,0x0C,0xB9,0xE8,0xCF,0x3A,0x03
	,0x00,0x85,0xC0,0x75,0x22,0x8B,0x15,0xC4,0x45,0x66,0x00,0x8A,0x84,0x32,0x95,0x10,0x00,0x00,0x84,0xC0,0x75,0x11,0x8B,0x0D,0x20,0x45,0x66,0x00,0x56,0xE8,0x1E,0xCC
	,0xFC,0xFF,0x85,0xC0,0x75,0x01,0x43,0x46,0x83,0xFE,0x09,0x7C,0x9B,0x5F,0x8B,0xC3,0x5E,0x5B,0xC3};
	writeData(0x045BE60, _0045BE60, 115);
	//0042AF40     33C0           XOR EAX,EAX
	BYTE _0042AF40[] = {0x33,0xC0,0xC3,0x66,0x66,0x90};
	writeData(0x042AF40, _0042AF40, 6);
	//0042AF60     C2 0400        RETN 4
	BYTE _0042AF60[] = {0xC2,0x04,0x00,0x90};
	writeData(0x042AF60, _0042AF60, 4);
	//0042B300     C3             RETN
	BYTE _0042B300[] = {0xC3,0x66,0x90};
	writeData(0x042B300, _0042B300, 4);
	//0042B280     C2 0800        RETN 8
	BYTE _0042B280[] = {0xC2,0x08,0x00,0x66,0x66,0x90};
	writeData(0x042B280, _0042B280,6);
	//00425ACC  
	BYTE _00425ACC[] = {0x68,0x04,0x00,0x02,0x00,0x89,0x74,0x24,0x3C,0x89,0x85,0xE8,0x15,0x00,0x00,0xE8,0x80,0x34,0x1D,0x00,0x83,0xC4,0x04,0x89,0x44,0x24,0x44,0x3B,0xC3,0xC7,0x44,0x24
	,0x38,0x02,0x00,0x00,0x00,0x74,0x26,0x68,0x90,0x60,0x42,0x00,0x68,0x70,0x60,0x42,0x00,0x8D,0x78,0x04,0x68,0x00,0x20,0x00,0x00,0x6A,0x10,0x57,0xC7,0x00,0x00,0x20
	,0x00,0x00,0xE8,0x53,0x73,0x1D,0x00,0x8B,0xC7,0x66,0x66,0x66,0x90,0x68,0x04,0x00,0x18,0x00,0x89,0x74,0x24,0x3C,0x89,0x85,0xD8,0x1D,0x00,0x00,0xE8,0x33,0x34,0x1D
	,0x00,0x83,0xC4,0x04,0x89,0x44,0x24,0x44,0x3B,0xC3,0xC7,0x44,0x24,0x38,0x03,0x00,0x00,0x00,0x74,0x26,0x68,0xE0,0x60,0x42,0x00,0x68,0xC0,0x60,0x42,0x00,0x8D,0x78
	,0x04,0x68,0x00,0x00,0x01,0x00,0x6A,0x18,0x57,0xC7,0x00,0x00,0x00,0x01,0x00,0xE8,0x06,0x73,0x1D,0x00,0x8B,0xC7,0x66,0x66,0x66,0x90,0x8B,0xCD};
	writeData(0x0425ACC, _00425ACC, 156);
	//0042AE50  /$ 90             NOP
	BYTE _0042AE50[] = {0x90,0x53,0x55,0x56,0x57,0x8B,0xF9,0x33,0xED,0x33,0xDB,0x8B,0xB7,0xDC,0x1D,0x00,0x00,0x03,0xF3,0x8B,0x06,0x3B,0xC5,0x74,0x09,0x50,0xE8,0x41,0xE2,0x1C,0x00,0x83
	,0xC4,0x04,0x83,0xC3,0x18,0x89,0x2E,0x81,0xFB,0xE8,0xFF,0x17,0x00,0x89,0x6E,0x04,0x89,0x6E,0x08,0x89,0x6E,0x0C,0x89,0x6E,0x10,0x89,0x6E,0x14,0x76,0xCD,0x33,0xDB
	,0x8B,0xB7,0xD8,0x1D,0x00,0x00,0x03,0xF3,0x8B,0x06,0x3B,0xC5,0x74,0x09,0x50,0xE8,0x0C,0xE2,0x1C,0x00,0x83,0xC4,0x04,0x83,0xC3,0x10,0x89,0x2E,0x81,0xFB,0xF0,0xFF
	,0x01,0x00,0x89,0x6E,0x04,0x89,0x6E,0x08,0x89,0x6E,0x0C,0x76,0xD3,0x5F,0x5E,0x5D,0x5B,0xC3,0x90};
	writeData(0x042AE50, _0042AE50, 115);
	//0042AEE0  /$ 53             PUSH EBX
	BYTE _0042AEE0[] = {0x53,0x55,0x56,0x57,0x8B,0x44,0x24,0x14,0x33,0xED,0x48,0xC1,0xE0,0x10,0x8D,0x04,0x40,0x8B,0x9B,0xDC,0x1D,0x00,0x00,0x33,0xFF,0x03,0xD8,0x8D,0x34,0x3B,0x8B,0x06
	,0x3B,0xC5,0x74,0x09,0x50,0xE8,0xA6,0xE1,0x1C,0x00,0x83,0xC4,0x04,0x89,0x2E,0x89,0x6E,0x04,0x89,0x6E,0x08,0x89,0x6E,0x0C,0x89,0x6E,0x10,0x89,0x6E,0x14,0x83,0xC7
	,0x18,0x81,0xFF,0x00,0x00,0x03,0x00,0x72,0xD2,0x5F,0x5E,0x5D,0x5B,0xC2,0x04,0x00,0x66,0x66,0x90 };
	writeData(0x042AEE0, _0042AEE0,83 );
	
	//CALL 005F90B0   =  CALL 006137BE heap free
	//CALL 005F8F60   =  CALL 006137B0 heap alloc
	//0042AFB0  /$ 56             PUSH ESI
	BYTE _0042AFB0[] = {0x56,0x8B,0x81,0xE4,0x10,0x00,0x00,0x57,0x85,0xC0,0x75,0x05,0x5F,0x5E,0xC2,0x18,0x00,0x8B,0x44,0x24,0x20,0x8B,0xF9,0x48,0xC1,0xE0,0x10,0x8B,0x97,0xDC,0x1D,0x00
	,0x00,0x8D,0x0C,0x40,0x8B,0x44,0x24,0x0C,0x8B,0x44,0x24,0x0C,0x03,0xD1,0x8B,0xF0,0x25,0xFF,0x1F,0x00,0x00,0x53,0x53,0xC1,0xE0,0x03,0x8D,0x1C,0x40,0x8B,0x44,0x24
	,0x1C,0x03,0xDA,0x8B,0x54,0x24,0x20,0x89,0x43,0x0C,0x8B,0x44,0x24,0x18,0x89,0x53,0x10,0x8B,0xC8,0x89,0x73,0x04,0x89,0x43,0x08,0x85,0xC0,0x74,0x3F,0x8B,0x53,0x14
	,0x3B,0xC2,0x7E,0x24,0x8B,0x0B,0x50,0x21,0xC9,0x74,0x09,0x51,0xE8,0x8F,0xE0,0x1C,0x00,0x83,0xC4,0x04,0xE8,0x37,0xDF,0x1C,0x00,0x83,0xC4,0x04,0x8B,0x4B,0x08,0x89
	,0x03,0x85,0xC0,0x74,0x17,0x89,0x4B,0x14,0x8B,0x3B,0x8B,0x74,0x24,0x14,0x8B,0xD1,0xC1,0xE9,0x02,0xF3,0xA5,0x8B,0xCA,0x83,0xE1,0x03,0xF3,0xA4,0x5B,0x5F,0x5E,0xC2
	,0x18,0x00,0x8B,0x74,0x24,0x1C,0x8B,0xD1,0x8B,0xF8,0xC1,0xE9,0x02,0xF3,0xA5,0x8B,0x44,0x24,0x20,0x8B,0xCA,0x83,0xE1,0x03,0xF3,0xA4,0x8B,0x74,0x24,0x10,0x89,0x45
	,0x08,0x8B,0x8E,0xDC,0x1D,0x00,0x00,0x8B,0x54,0x24,0x18,0x5D,0x5F,0x89,0x54,0x19,0x04,0x8B,0x86,0xE0,0x1D,0x00,0x00,0x8B,0x4C,0x24,0x1C,0x89,0x4C,0x18,0x0C,0x8B
	,0x96,0xE0,0x1D,0x00,0x00,0x8B,0x44,0x24,0x20,0x5E,0x89,0x44,0x1A,0x10,0xB8,0x01,0x00,0x00,0x00,0x5B,0x59,0xC2,0x14,0x00};
	writeData(0x042AFB0, _0042AFB0,248 );*/

}